{"version":3,"sources":["components/Icons.js","components/Footer.js","App.js","index.js"],"names":["Icons","title","color","type","useState","open","setOpen","computedtype","computedLink","replace","toLowerCase","computedtitle","computedColor","substring","imgSrc","Paper","className","onClick","copy","navigator","clipboard","writeText","then","elevation","style","fontSize","marginBottom","length","alt","src","Snackbar","anchorOrigin","vertical","horizontal","onClose","event","reason","autoHideDuration","message","Footer","backgroundColor","marginTop","Container","paddingTop","Divider","margin","href","rel","target","textAlign","App","data","setData","filter","setFilter","input","setInput","limit","setLimit","badgeType","setBadgeType","useEffect","a","JSON","parse","stringify","icon","loadData","iconData","maxWidth","Box","display","xs","md","justifyContent","noValidate","autoComplete","onSubmit","e","preventDefault","TextField","label","variant","size","value","marginRight","onChange","filtered","tile","includes","filteredData","select","SelectProps","native","map","option","Grid","container","spacing","minHeight","slice","i","item","sm","Skeleton","width","height","Button","fullWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37e5f152.chunk.js","sourcesContent":["import \"../App.css\";\r\nimport { Paper, Snackbar } from \"@material-ui/core\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nfunction Icons({ title, color, type }) {\r\n  const [open, setOpen] = useState(false);\r\n  const computedtype = type !== \"social\" ? \"white\" : \"black\";\r\n  const computedLink = title.replace(/ /g, \"-\").toLowerCase();\r\n  const computedtitle = title.replace(\"-\", \" \");\r\n  const computedColor = color.substring(1);\r\n  const imgSrc = `https://img.shields.io/badge/${computedtitle}-${computedColor}?style=${type}&logo=${computedLink}&logoColor=${computedtype}`;\r\n  const copyFeedback = () => {\r\n    const copy = `<img alt=\"${title}\" src=\"${imgSrc}\" />`;\r\n    navigator.clipboard.writeText(copy).then(() => {\r\n      setOpen(true);\r\n    });\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Paper className=\"icons\" onClick={copyFeedback} elevation={2}>\r\n        <p\r\n          style={{\r\n            fontSize: \"12px\",\r\n            marginBottom: \"3px\"\r\n          }}\r\n        >\r\n          {title.length < 20 ? title : `${title.substring(0, 18)}...`} - {color}\r\n        </p>\r\n        <img alt={title} src={imgSrc} />\r\n      </Paper>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\"\r\n        }}\r\n        onClose={handleClose}\r\n        open={open}\r\n        autoHideDuration={2000}\r\n        message={`${title} - Copied to the Clipboard`}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Icons;\r\n","import { Container, Divider } from \"@material-ui/core\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div style={{ backgroundColor: \"#e9e9e9\", marginTop: \"20px\" }}>\r\n      <Container>\r\n        <div style={{ paddingTop: \"10px\" }}>\r\n          <h4>\r\n            Hey there, I am Sushil & this is the small project created by me to\r\n            make your github profiles & website <em>Awesome</em>\r\n          </h4>\r\n        </div>\r\n        <div style={{ marginTop: \"10px\" }}>\r\n          <h3>Format</h3>\r\n          <Divider style={{ margin: \"5px 0 5px 0\" }} />\r\n          <code style={{ backgroundColor: \"#c7c7c7\" }}>\r\n            https://img.shields.io/badge/(LABEL)-(COLOR)?style=(TYPE)&logo=(LOGO)&logoColor=(LOGO_COLOR)&logoWidth=(LOGO_WIDTH)&labelColor=(LABEL_COLOR)\r\n          </code>\r\n          <ul>\r\n            <li>\r\n              <strong>(LABEL)</strong> - Label of your badge (Can be any)\r\n            </li>\r\n            <li>\r\n              <strong>(COLOR)</strong> - rgb, rgba, hsl, hsla and hex without\r\n              '#' eg 512BD4\r\n            </li>\r\n            <li>\r\n              <strong>(TYPE)</strong> - 'plastic' || 'flat' || 'flat-square' ||\r\n              'for-the-badge' || 'social'\r\n            </li>\r\n            <li>\r\n              <strong>(LOGO)</strong> - Click on tile of the brand and whole img\r\n              tag with appropriate information will be copied to your clipboard\r\n              along with logo and brand color.{\" \"}\r\n              <a href=\"https://simpleicons.org/\">Simple Icon</a>\r\n            </li>\r\n            <li>\r\n              <strong>(LOGO_COLOR)</strong> - rgb, rgba, hsl, hsla and hex\r\n              without '#' eg 512BD4\r\n            </li>\r\n            <li>\r\n              <strong>(LOGO_WIDTH)</strong> - number eg '30'\r\n            </li>\r\n            <li>\r\n              <strong>(LABEL_COLOR)</strong> - rgb, rgba, hsl, hsla and hex\r\n              without '#' eg 512BD4\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div style={{ marginTop: \"10px\" }}>\r\n          <h3>Limitations</h3>\r\n          <Divider style={{ margin: \"5px 0 5px 0\" }} />\r\n          <ul>\r\n            <li>\r\n              Note that some icons might not visible, So you can play with LOGO\r\n              part try to make it in slug form (Almost 95% are visible)\r\n            </li>\r\n            <li>\r\n              LOGO_COLOR and LABEL_COLOR if not visible properly then change\r\n              them\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div style={{ marginTop: \"10px\" }}>\r\n          <h3>Reference</h3>\r\n          <Divider style={{ margin: \"5px 0 5px 0\" }} />\r\n          <ul>\r\n            <li>\r\n              <a\r\n                href=\"https://simpleicons.org/\"\r\n                rel=\"noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                Simple Icon\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://shields.io/\" rel=\"noreferrer\" target=\"_blank\">\r\n                Shields IO\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </Container>\r\n      <footer\r\n        style={{\r\n          backgroundColor: \"#b9b9b9\",\r\n          textAlign: \"center\",\r\n          marginTop: \"20px\"\r\n        }}\r\n      >\r\n        Created by ♥️ and react -{\" \"}\r\n        <a\r\n          href=\"https://www.sushilkamble.live/\"\r\n          rel=\"noreferrer\"\r\n          target=\"_blank\"\r\n        >\r\n          sushilkamble.live\r\n        </a>{\" \"}\r\n        -{\" \"}\r\n        <a\r\n          href=\"https://github.com/sushil-kamble\"\r\n          rel=\"noreferrer\"\r\n          target=\"_blank\"\r\n        >\r\n          Github\r\n        </a>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import \"./App.css\";\nimport icon from \"./data.json\";\nimport Icons from \"./components/Icons\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Container,\n  Divider,\n  Grid,\n  TextField\n} from \"@material-ui/core\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [filter, setFilter] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [limit, setLimit] = useState(100);\n  const options = [\"plastic\", \"flat\", \"flat-square\", \"for-the-badge\", \"social\"];\n  const [badgeType, setBadgeType] = useState(\"flat-square\");\n\n  useEffect(() => {\n    const loadData = async () => {\n      return JSON.parse(JSON.stringify(icon));\n    };\n    loadData().then(iconData => {\n      setData(iconData);\n      setFilter(iconData);\n    });\n  }, []);\n  const filteredData = input => {\n    setInput(input);\n    if (input.length > 0) {\n      const filtered = data.filter(tile =>\n        tile.title.toLowerCase().includes(input.toLowerCase())\n      );\n      setFilter(filtered);\n    } else {\n      setFilter(data);\n    }\n  };\n  const increaseLimit = () => {\n    setLimit(limit + 100);\n  };\n  const changedType = type => {\n    setLimit(100);\n    setBadgeType(type);\n  };\n  return (\n    <div>\n      <Container maxWidth=\"lg\">\n        <Box\n          display={{ xs: \"block\", md: \"flex\" }}\n          justifyContent={\"space-between\"}\n          style={{ marginTop: \"20px\", marginBottom: \"10px\" }}\n        >\n          <div style={{ marginBottom: \"10px\" }}>\n            <h2>Brand Badges</h2>\n          </div>\n          <form\n            noValidate\n            autoComplete=\"off\"\n            onSubmit={e => e.preventDefault()}\n          >\n            <TextField\n              label=\"Search Badge\"\n              variant=\"outlined\"\n              size=\"small\"\n              value={input}\n              style={{ marginRight: \"50px\" }}\n              onChange={e => filteredData(e.target.value)}\n            />\n            <TextField\n              select\n              size=\"small\"\n              label=\"Select Type\"\n              SelectProps={{\n                native: true\n              }}\n              onChange={e => changedType(e.target.value)}\n              variant=\"outlined\"\n            >\n              {options.map(option => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </TextField>\n          </form>\n        </Box>\n        <Divider style={{ margin: \"10px 0px 10px 0px\" }} />\n        <h4>Click on the tile to copy the markdown/html src tag of the icon</h4>\n        <h5>{filter.length} search results</h5>\n        {filter.length > 0 ? (\n          <Grid\n            container\n            spacing={1}\n            style={{ marginTop: \"10px\", minHeight: \"60vh\" }}\n          >\n            {filter.slice(0, limit).map((tile, i) => (\n              <Grid item xs={6} sm={3} md={2} key={i}>\n                <Icons title={tile.title} color={tile.color} type={badgeType} />\n              </Grid>\n            ))}\n          </Grid>\n        ) : (\n          <Skeleton variant=\"rect\" width={\"84vw\"} height={\"80vh\"} />\n        )}\n\n        {filter.length > limit && (\n          <Button\n            variant=\"outlined\"\n            style={{ margin: \"20px 5px 20px 5px\" }}\n            onClick={increaseLimit}\n            fullWidth\n          >\n            More\n          </Button>\n        )}\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}